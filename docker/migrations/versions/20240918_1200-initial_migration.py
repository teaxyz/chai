"""initial migration

Revision ID: 14ea939f4bf7
Revises:
Create Date: 2024-09-18 12:00:22.201699

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "14ea939f4bf7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("derived_id", sa.String(), nullable=False, unique=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("package_manager", sa.String(), nullable=False),
        sa.Column("repo", sa.String(), nullable=True),
        sa.Column("record_created_at", sa.DateTime(), nullable=False),
        sa.Column("record_updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_projects")),
    )
    op.create_table(
        "versions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("record_created_at", sa.DateTime(), nullable=False),
        sa.Column("record_updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["projects.id"],
            name=op.f("fk_versions_project_id_projects"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_versions")),
    )
    op.create_table(
        "depends_on",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("version_id", sa.UUID(), nullable=False),
        sa.Column("dependency_id", sa.UUID(), nullable=False),
        sa.Column("dependency_type", sa.String(), nullable=True),
        sa.Column("semver_range", sa.String(), nullable=True),
        sa.Column("record_created_at", sa.DateTime(), nullable=False),
        sa.Column("record_updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["version_id"],
            ["versions.id"],
            name=op.f("fk_depends_on_version_id_versions"),
        ),
        sa.ForeignKeyConstraint(
            ["dependency_id"],
            ["projects.id"],
            name=op.f("fk_depends_on_dependency_id_projects"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_depends_on")),
    )


def downgrade() -> None:
    op.drop_table("depends_on")
    op.drop_table("versions")
    op.drop_table("projects")
