services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=s3cr3t
    ports:
      - "5435:5432"
    volumes:
      - ./data/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  alembic:
    build:
      context: .
      dockerfile: ./alembic/Dockerfile
    environment:
      - CHAI_DATABASE_URL=postgresql://postgres:s3cr3t@db:5432/chai
      - PGPASSWORD=s3cr3t
    depends_on:
      db:
        condition: service_healthy
    working_dir: /alembic
    entrypoint: ["./run_migrations.sh"]

  crates:
    build:
      context: .
      dockerfile: ./package_managers/crates/Dockerfile
    environment:
      - CHAI_DATABASE_URL=postgresql://postgres:s3cr3t@db:5432/chai
      - PYTHONPATH=/
    depends_on:
      db:
        condition: service_healthy
      alembic:
        condition: service_completed_successfully

  homebrew:
    build:
      context: ./package_managers/homebrew
      dockerfile: Dockerfile
    environment:
      - CHAI_DATABASE_URL=postgresql://postgres:s3cr3t@db:5432/chai
    volumes:
      - ./core:/app/core
      - ./package_managers/homebrew:/app/homebrew
    depends_on:
      db:
        condition: service_healthy
      alembic:
        condition: service_completed_successfully

  monitor:
    build:
      context: ./docker/monitor
      dockerfile: Dockerfile
    environment:
      - DOCKER_HOST=${DOCKER_HOST:-unix:///var/run/docker.sock}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - crates
      - homebrew